function [ddalpha_Body,ddbeta_Body,ddgamma_Body,ddx_Head,ddy_Head,ddz_Head] = FFD_Dds_Body(alpha_Body,beta_Body,dalpha_Body,depth_Body,dgamma_Body,g,gamma_Body,height_Body,l_Beta_Hand,l_F_X,l_F_Y,l_F_Z,l_Tau_Beta_Shoulder,l_Tau_Alpha_Shoulder,m_Body,r_Beta_Hand,r_F_X,r_F_Y,r_F_Z,r_Tau_Beta_Shoulder,r_Tau_Alpha_Shoulder,width_Body)
%FFD_DDS_BODY
%    [DDALPHA_BODY,DDBETA_BODY,DDGAMMA_BODY,DDX_HEAD,DDY_HEAD,DDZ_HEAD] = FFD_DDS_BODY(ALPHA_BODY,BETA_BODY,DALPHA_BODY,DEPTH_BODY,DGAMMA_BODY,G,GAMMA_BODY,HEIGHT_BODY,L_BETA_HAND,L_F_X,L_F_Y,L_F_Z,L_TAU_BETA_SHOULDER,L_TAU_ALPHA_SHOULDER,M_BODY,R_BETA_HAND,R_F_X,R_F_Y,R_F_Z,R_TAU_BETA_SHOULDER,R_TAU_ALPHA_SHOULDER,WIDTH_BODY)

%    This function was generated by the Symbolic Math Toolbox version 8.6.
%    04-Jun-2021 17:37:36

t2 = cos(alpha_Body);
t3 = cos(beta_Body);
t4 = cos(gamma_Body);
t5 = cos(l_Beta_Hand);
t6 = sin(alpha_Body);
t7 = cos(r_Beta_Hand);
t8 = sin(beta_Body);
t9 = sin(gamma_Body);
t10 = sin(l_Beta_Hand);
t11 = sin(r_Beta_Hand);
t12 = g.*m_Body;
t13 = l_Tau_Beta_Shoulder+r_Tau_Beta_Shoulder;
t14 = dalpha_Body.^2;
t15 = depth_Body.^2;
t16 = dgamma_Body.^2;
t17 = height_Body.^2;
t19 = width_Body.^2;
t28 = 1.0./m_Body;
t18 = t17.^2;
t20 = t2.^2;
t21 = t4.^2;
t22 = t6.^2;
t23 = t9.^2;
t24 = l_Tau_Alpha_Shoulder.*t5;
t25 = r_Tau_Alpha_Shoulder.*t7;
t26 = l_Tau_Alpha_Shoulder.*t10;
t27 = r_Tau_Alpha_Shoulder.*t11;
t29 = -t12;
t30 = t2.*t13;
t32 = t15.*t17;
t33 = t15+t17;
t34 = t15.*t19;
t35 = t17.*t19;
t36 = t17+t19;
t37 = dalpha_Body.*dgamma_Body.*height_Body.*t6.*t9.*4.0;
t38 = (t2.*t3.*width_Body)./2.0;
t39 = (t2.*t8.*width_Body)./2.0;
t40 = (t3.*t6.*width_Body)./2.0;
t41 = (t6.*t8.*width_Body)./2.0;
t42 = dalpha_Body.*dgamma_Body.*height_Body.*m_Body.*t2.*t9;
t43 = height_Body.*t2.*t4.*t14.*2.0;
t44 = height_Body.*t2.*t4.*t16.*2.0;
t48 = (l_F_X.*t3.*t9.*width_Body)./2.0;
t49 = (r_F_X.*t3.*t9.*width_Body)./2.0;
t50 = (height_Body.*t2.*t4.*t12)./2.0;
t52 = (height_Body.*t6.*t9.*t12)./2.0;
t57 = (height_Body.*m_Body.*t9.*t16)./2.0;
t60 = t2.*t8.*t9.*width_Body.*(-1.0./2.0);
t61 = t3.*t6.*t9.*width_Body.*(-1.0./2.0);
t69 = (height_Body.*m_Body.*t4.*t6.*t14)./2.0;
t70 = (height_Body.*m_Body.*t4.*t6.*t16)./2.0;
t71 = l_F_Y.*t2.*t3.*t4.*width_Body.*(-1.0./2.0);
t72 = l_F_Z.*t3.*t4.*t6.*width_Body.*(-1.0./2.0);
t78 = (m_Body.*t4.*t9.*t16.*t17)./4.0;
t31 = -t27;
t45 = -t37;
t46 = 1.0./t33;
t47 = 1.0./t36;
t51 = t9.*t38;
t53 = t9.*t39;
t54 = t9.*t40;
t55 = t9.*t41;
t58 = -t49;
t59 = -t50;
t62 = l_F_Y.*t4.*t38;
t63 = r_F_Y.*t4.*t38;
t64 = l_F_Z.*t4.*t40;
t65 = r_F_Z.*t4.*t40;
t66 = -t57;
t67 = t2.*t6.*t18.*t21;
t68 = t2.*t6.*t18.*t23;
t76 = t2.*t6.*t23.*t32;
t77 = t2.*t6.*t21.*t35;
t80 = (dalpha_Body.*dgamma_Body.*m_Body.*t4.*t9.*t17.*t20)./2.0;
t81 = (dalpha_Body.*dgamma_Body.*m_Body.*t4.*t9.*t17.*t22)./2.0;
t82 = (m_Body.*t4.*t9.*t14.*t17.*t20)./4.0;
t83 = t20.*t78;
t84 = (m_Body.*t4.*t9.*t14.*t17.*t22)./4.0;
t85 = t22.*t78;
t87 = m_Body.*t4.*t9.*t16.*t17.*t20.*(-1.0./4.0);
t89 = m_Body.*t4.*t9.*t16.*t17.*t22.*(-1.0./4.0);
t92 = t39+t61;
t93 = t40+t60;
t98 = t18+t32+t34+t35;
t105 = l_F_Z+r_F_Z+t29+t42+t69+t70;
t56 = t26+t31;
t74 = -t68;
t75 = l_F_X+r_F_X+t66;
t79 = -t76;
t86 = -t82;
t88 = -t84;
t90 = t38+t55;
t91 = t41+t51;
t96 = l_F_Y.*t92;
t97 = r_F_Y.*t92;
t101 = 1.0./t98;
t102 = t43+t44+t45;
t73 = t6.*t56;
t94 = l_F_Z.*t91;
t95 = r_F_Z.*t91;
t100 = -t96;
t103 = (m_Body.*t102)./4.0;
t106 = t67+t74+t77+t79;
t99 = -t94;
t104 = l_F_Y+r_F_Y+t103;
t108 = t30+t48+t52+t58+t63+t65+t71+t72+t73+t78+t86+t87+t88+t89;
t107 = t24+t25+t59+t80+t81+t95+t97+t99+t100;
ddalpha_Body = t28.*t46.*t107.*1.2e+1-height_Body.*t2.*t4.*t28.*t46.*t105.*6.0+height_Body.*t4.*t6.*t28.*t46.*t104.*6.0;
if nargout > 1
    ddbeta_Body = ((t9.*(t24+t25)-l_F_Z.*t90+l_F_Y.*t93+r_F_Z.*t90-r_F_Y.*t93-t4.*t6.*t13+t2.*t4.*t56-(l_F_X.*t4.*t8.*width_Body)./2.0+(r_F_X.*t4.*t8.*width_Body)./2.0).*-1.2e+1)./(m_Body.*t15+m_Body.*t19);
end
if nargout > 2
    ddgamma_Body = t28.*t47.*t108.*1.2e+1+height_Body.*t4.*t28.*t47.*t75.*6.0+height_Body.*t2.*t9.*t28.*t47.*t104.*6.0+height_Body.*t6.*t9.*t28.*t47.*t105.*6.0;
end
if nargout > 3
    ddx_Head = t28.*t47.*t75.*(t36+t17.*t21.*3.0)+height_Body.*t4.*t28.*t47.*t108.*6.0+t2.*t4.*t9.*t17.*t28.*t47.*t104.*3.0+t4.*t6.*t9.*t17.*t28.*t47.*t105.*3.0;
end
if nargout > 4
    ddy_Head = t28.*t101.*t105.*t106.*-3.0+t28.*t101.*t104.*(t98+t18.*t20.*t23.*3.0+t18.*t21.*t22.*3.0+t20.*t23.*t32.*3.0+t21.*t22.*t35.*3.0)+height_Body.*t4.*t6.*t28.*t46.*t107.*6.0+height_Body.*t2.*t9.*t28.*t47.*t108.*6.0+t2.*t4.*t9.*t17.*t28.*t47.*t75.*3.0;
end
if nargout > 5
    ddz_Head = t28.*t101.*t104.*t106.*-3.0+t28.*t101.*t105.*(t98+t18.*t20.*t21.*3.0+t18.*t22.*t23.*3.0+t20.*t21.*t35.*3.0+t22.*t23.*t32.*3.0)-height_Body.*t2.*t4.*t28.*t46.*t107.*6.0+height_Body.*t6.*t9.*t28.*t47.*t108.*6.0+t4.*t6.*t9.*t17.*t28.*t47.*t75.*3.0;
end
