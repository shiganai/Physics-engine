function [A11,A21,A31] = find_Coeffs_Ddr_Shoulder_Constant_HFD(alpha_Body,beta_Body,dalpha_Body,dbeta_Body,depth_Body,dgamma_Body,g,gamma_Body,height_Body,l_Beta_Hand,l_Tau_Alpha_Shoulder,m_Body,r_Beta_Hand,r_Tau_Alpha_Shoulder,width_Body)
%FIND_COEFFS_DDR_SHOULDER_CONSTANT_HFD
%    [A11,A21,A31] = FIND_COEFFS_DDR_SHOULDER_CONSTANT_HFD(ALPHA_BODY,BETA_BODY,DALPHA_BODY,DBETA_BODY,DEPTH_BODY,DGAMMA_BODY,G,GAMMA_BODY,HEIGHT_BODY,L_BETA_HAND,L_TAU_ALPHA_SHOULDER,M_BODY,R_BETA_HAND,R_TAU_ALPHA_SHOULDER,WIDTH_BODY)

%    This function was generated by the Symbolic Math Toolbox version 8.6.
%    04-Jun-2021 16:39:35

t2 = cos(alpha_Body);
t3 = cos(beta_Body);
t4 = cos(gamma_Body);
t5 = cos(l_Beta_Hand);
t6 = sin(alpha_Body);
t7 = cos(r_Beta_Hand);
t8 = sin(beta_Body);
t9 = sin(gamma_Body);
t10 = sin(l_Beta_Hand);
t11 = sin(r_Beta_Hand);
t12 = g.*m_Body;
t13 = dalpha_Body.^2;
t14 = dbeta_Body.^2;
t15 = depth_Body.^2;
t16 = dgamma_Body.^2;
t17 = height_Body.^2;
t18 = height_Body.^3;
t20 = width_Body.^2;
t29 = 1.0./m_Body;
t19 = t17.^2;
t21 = t2.^2;
t22 = t4.^2;
t23 = t6.^2;
t24 = t9.^2;
t25 = l_Tau_Alpha_Shoulder.*t5;
t26 = r_Tau_Alpha_Shoulder.*t7;
t27 = l_Tau_Alpha_Shoulder.*t10;
t28 = r_Tau_Alpha_Shoulder.*t11;
t30 = -t12;
t31 = m_Body.*t15;
t32 = m_Body.*t20;
t34 = t15.*t17;
t35 = t15+t17;
t36 = t15.*t20;
t37 = t17.*t20;
t38 = t17+t20;
t39 = dalpha_Body.*dgamma_Body.*height_Body.*t6.*t9;
t41 = dalpha_Body.*dgamma_Body.*height_Body.*m_Body.*t2.*t9;
t43 = height_Body.*t2.*t4.*t13.*2.0;
t44 = height_Body.*t2.*t4.*t16.*2.0;
t49 = (height_Body.*t2.*t4.*t12)./2.0;
t50 = (height_Body.*t6.*t9.*t12)./2.0;
t53 = (height_Body.*t2.*t4.*t13)./2.0;
t54 = (height_Body.*t2.*t4.*t16)./2.0;
t60 = (height_Body.*m_Body.*t4.*t6.*t13)./2.0;
t61 = (height_Body.*m_Body.*t4.*t6.*t16)./2.0;
t67 = (m_Body.*t4.*t9.*t16.*t17)./4.0;
t33 = -t28;
t40 = t39.*4.0;
t42 = t25+t26;
t45 = -t39;
t47 = 1.0./t35;
t48 = 1.0./t38;
t51 = t31+t32;
t55 = -t49;
t56 = -t50;
t58 = t2.*t6.*t19.*t22;
t59 = t2.*t6.*t19.*t24;
t65 = t2.*t6.*t24.*t34;
t66 = t2.*t6.*t22.*t37;
t70 = -t67;
t72 = (dalpha_Body.*dgamma_Body.*m_Body.*t4.*t9.*t17.*t21)./2.0;
t73 = (dalpha_Body.*dgamma_Body.*m_Body.*t4.*t9.*t17.*t23)./2.0;
t74 = (m_Body.*t4.*t9.*t13.*t17.*t21)./4.0;
t75 = t21.*t67;
t76 = (m_Body.*t4.*t9.*t13.*t17.*t23)./4.0;
t77 = t23.*t67;
t79 = t19+t34+t36+t37;
t84 = t30+t41+t60+t61;
t46 = -t40;
t52 = t27+t33;
t57 = t9.*t42;
t62 = 1.0./t51;
t64 = -t59;
t71 = -t65;
t78 = t4.*t9.*t16.*t17.*t48.*3.0;
t80 = 1.0./t79;
t83 = t45+t53+t54;
t88 = t42+t55+t72+t73;
t90 = height_Body.*t6.*t9.*t29.*t48.*t84.*6.0;
t91 = height_Body.*t2.*t4.*t29.*t47.*t84.*6.0;
t63 = t6.*t52;
t68 = t2.*t4.*t52;
t82 = t43+t44+t46;
t89 = t58+t64+t66+t71;
t92 = -t90;
t93 = -t91;
t94 = t29.*t47.*t88.*1.2e+1;
t69 = -t63;
t81 = t57+t68;
t85 = height_Body.*t4.*t6.*t47.*t82.*(3.0./2.0);
t86 = height_Body.*t2.*t9.*t48.*t82.*(3.0./2.0);
t87 = -t86;
t95 = t56+t69+t70+t74+t75+t76+t77;
t97 = t85+t93+t94;
t96 = t29.*t48.*t95.*1.2e+1;
t98 = t78+t87+t92+t96;
A11 = t3.*t4.*t14.*width_Body.*(-1.0./2.0)-(t3.*t4.*t16.*width_Body)./2.0+(t3.*t9.*t98.*width_Body)./2.0-(height_Body.*t9.*t16.*t48.*(t38+t17.*t22.*3.0))./2.0+dbeta_Body.*dgamma_Body.*t8.*t9.*width_Body-height_Body.*t4.*t29.*t48.*t95.*6.0+t4.*t8.*t62.*t81.*width_Body.*6.0+t2.*t4.*t9.*t17.*t48.*t82.*(3.0./4.0)+t4.*t6.*t9.*t17.*t29.*t48.*t84.*3.0;
if nargout > 1
    A21 = t80.*t83.*(t79+t19.*t21.*t24.*3.0+t19.*t22.*t23.*3.0+t21.*t24.*t34.*3.0+t22.*t23.*t37.*3.0)-t29.*t80.*t84.*t89.*3.0-(t6.*t8.*t13.*width_Body)./2.0-(t6.*t8.*t14.*width_Body)./2.0+(t2.*t8.*t97.*width_Body)./2.0+dalpha_Body.*dbeta_Body.*t2.*t3.*width_Body-(t2.*t3.*t9.*t13.*width_Body)./2.0-(t2.*t3.*t9.*t14.*width_Body)./2.0-(t2.*t3.*t9.*t16.*width_Body)./2.0-(t2.*t3.*t4.*t98.*width_Body)./2.0-(t3.*t6.*t9.*t97.*width_Body)./2.0-t3.*t6.*t62.*t81.*width_Body.*6.0+height_Body.*t4.*t6.*t29.*t47.*t88.*6.0-height_Body.*t2.*t9.*t29.*t48.*t95.*6.0-t2.*t4.*t16.*t18.*t24.*t48.*(3.0./2.0)+t2.*t8.*t9.*t62.*t81.*width_Body.*6.0+dalpha_Body.*dbeta_Body.*t6.*t8.*t9.*width_Body-dalpha_Body.*dgamma_Body.*t3.*t4.*t6.*width_Body-dbeta_Body.*dgamma_Body.*t2.*t4.*t8.*width_Body;
end
if nargout > 2
    A31 = t80.*t83.*t89.*-3.0+(t2.*t8.*t13.*width_Body)./2.0+(t2.*t8.*t14.*width_Body)./2.0+(t6.*t8.*t97.*width_Body)./2.0+t29.*t80.*t84.*(t79+t19.*t21.*t22.*3.0+t19.*t23.*t24.*3.0+t21.*t22.*t37.*3.0+t23.*t24.*t34.*3.0)+dalpha_Body.*dbeta_Body.*t3.*t6.*width_Body-(t3.*t6.*t9.*t13.*width_Body)./2.0-(t3.*t6.*t9.*t14.*width_Body)./2.0-(t3.*t6.*t9.*t16.*width_Body)./2.0+(t2.*t3.*t9.*t97.*width_Body)./2.0-(t3.*t4.*t6.*t98.*width_Body)./2.0+t2.*t3.*t62.*t81.*width_Body.*6.0-height_Body.*t2.*t4.*t29.*t47.*t88.*6.0-height_Body.*t6.*t9.*t29.*t48.*t95.*6.0-t4.*t6.*t16.*t18.*t24.*t48.*(3.0./2.0)+t6.*t8.*t9.*t62.*t81.*width_Body.*6.0-dalpha_Body.*dbeta_Body.*t2.*t8.*t9.*width_Body+dalpha_Body.*dgamma_Body.*t2.*t3.*t4.*width_Body-dbeta_Body.*dgamma_Body.*t4.*t6.*t8.*width_Body;
end
